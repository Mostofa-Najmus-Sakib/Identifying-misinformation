{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Classification","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"FnZ2O5j9bQ9-","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1612310115096,"user_tz":420,"elapsed":30912,"user":{"displayName":"MOSTOFA NAJMUS SAKIB","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhD_cyrcHDUS-0AuyO_Nk9IIjVxl6P0cIiRsl6ecg=s64","userId":"10398238725876788353"}},"outputId":"36af06c9-9697-41fd-e572-557cc13fa4c2"},"source":["import pandas as pd\n","from sklearn.model_selection import train_test_split\n","from sklearn.model_selection import cross_val_score\n","from sklearn import metrics\n","import statsmodels.api as sm\n","import statsmodels.formula.api as smf\n","import seaborn as sns\n","from sklearn.metrics import confusion_matrix, roc_auc_score ,roc_curve,auc\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.ensemble import ExtraTreesClassifier\n","from sklearn.naive_bayes import GaussianNB\n","from sklearn import svm\n","from sklearn.linear_model import LogisticRegression\n","from collections import Counter\n","import numpy as np\n","from sklearn.model_selection import GridSearchCV,StratifiedKFold\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.svm import SVC\n","import matplotlib.pyplot as plt\n","from sklearn.metrics import confusion_matrix,precision_recall_fscore_support,accuracy_score\n","from sklearn import tree\n","import xgboost as xgb\n","\n","import warnings\n","warnings.simplefilter('ignore')\n","from google.colab import drive\n","drive.mount('/content/gdrive')"],"execution_count":1,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/statsmodels/tools/_testing.py:19: FutureWarning: pandas.util.testing is deprecated. Use the functions in the public API at pandas.testing instead.\n","  import pandas.util.testing as tm\n"],"name":"stderr"},{"output_type":"stream","text":["Mounted at /content/gdrive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"vb8_eT2tqfV4","colab":{"resources":{"http://localhost:8080/nbextensions/google.colab/files.js":{"data":"Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7CgpmdW5jdGlvbiBfdXBsb2FkRmlsZXMoaW5wdXRJZCwgb3V0cHV0SWQpIHsKICBjb25zdCBzdGVwcyA9IHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCk7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICAvLyBDYWNoZSBzdGVwcyBvbiB0aGUgb3V0cHV0RWxlbWVudCB0byBtYWtlIGl0IGF2YWlsYWJsZSBmb3IgdGhlIG5leHQgY2FsbAogIC8vIHRvIHVwbG9hZEZpbGVzQ29udGludWUgZnJvbSBQeXRob24uCiAgb3V0cHV0RWxlbWVudC5zdGVwcyA9IHN0ZXBzOwoKICByZXR1cm4gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpOwp9CgovLyBUaGlzIGlzIHJvdWdobHkgYW4gYXN5bmMgZ2VuZXJhdG9yIChub3Qgc3VwcG9ydGVkIGluIHRoZSBicm93c2VyIHlldCksCi8vIHdoZXJlIHRoZXJlIGFyZSBtdWx0aXBsZSBhc3luY2hyb25vdXMgc3RlcHMgYW5kIHRoZSBQeXRob24gc2lkZSBpcyBnb2luZwovLyB0byBwb2xsIGZvciBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcC4KLy8gVGhpcyB1c2VzIGEgUHJvbWlzZSB0byBibG9jayB0aGUgcHl0aG9uIHNpZGUgb24gY29tcGxldGlvbiBvZiBlYWNoIHN0ZXAsCi8vIHRoZW4gcGFzc2VzIHRoZSByZXN1bHQgb2YgdGhlIHByZXZpb3VzIHN0ZXAgYXMgdGhlIGlucHV0IHRvIHRoZSBuZXh0IHN0ZXAuCmZ1bmN0aW9uIF91cGxvYWRGaWxlc0NvbnRpbnVlKG91dHB1dElkKSB7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICBjb25zdCBzdGVwcyA9IG91dHB1dEVsZW1lbnQuc3RlcHM7CgogIGNvbnN0IG5leHQgPSBzdGVwcy5uZXh0KG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSk7CiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXh0LnZhbHVlLnByb21pc2UpLnRoZW4oKHZhbHVlKSA9PiB7CiAgICAvLyBDYWNoZSB0aGUgbGFzdCBwcm9taXNlIHZhbHVlIHRvIG1ha2UgaXQgYXZhaWxhYmxlIHRvIHRoZSBuZXh0CiAgICAvLyBzdGVwIG9mIHRoZSBnZW5lcmF0b3IuCiAgICBvdXRwdXRFbGVtZW50Lmxhc3RQcm9taXNlVmFsdWUgPSB2YWx1ZTsKICAgIHJldHVybiBuZXh0LnZhbHVlLnJlc3BvbnNlOwogIH0pOwp9CgovKioKICogR2VuZXJhdG9yIGZ1bmN0aW9uIHdoaWNoIGlzIGNhbGxlZCBiZXR3ZWVuIGVhY2ggYXN5bmMgc3RlcCBvZiB0aGUgdXBsb2FkCiAqIHByb2Nlc3MuCiAqIEBwYXJhbSB7c3RyaW5nfSBpbnB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIGlucHV0IGZpbGUgcGlja2VyIGVsZW1lbnQuCiAqIEBwYXJhbSB7c3RyaW5nfSBvdXRwdXRJZCBFbGVtZW50IElEIG9mIHRoZSBvdXRwdXQgZGlzcGxheS4KICogQHJldHVybiB7IUl0ZXJhYmxlPCFPYmplY3Q+fSBJdGVyYWJsZSBvZiBuZXh0IHN0ZXBzLgogKi8KZnVuY3Rpb24qIHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IGlucHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlucHV0SWQpOwogIGlucHV0RWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlOwoKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIG91dHB1dEVsZW1lbnQuaW5uZXJIVE1MID0gJyc7CgogIGNvbnN0IHBpY2tlZFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7CiAgICAgIHJlc29sdmUoZS50YXJnZXQuZmlsZXMpOwogICAgfSk7CiAgfSk7CgogIGNvbnN0IGNhbmNlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOwogIGlucHV0RWxlbWVudC5wYXJlbnRFbGVtZW50LmFwcGVuZENoaWxkKGNhbmNlbCk7CiAgY2FuY2VsLnRleHRDb250ZW50ID0gJ0NhbmNlbCB1cGxvYWQnOwogIGNvbnN0IGNhbmNlbFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgY2FuY2VsLm9uY2xpY2sgPSAoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9OwogIH0pOwoKICAvLyBXYWl0IGZvciB0aGUgdXNlciB0byBwaWNrIHRoZSBmaWxlcy4KICBjb25zdCBmaWxlcyA9IHlpZWxkIHsKICAgIHByb21pc2U6IFByb21pc2UucmFjZShbcGlja2VkUHJvbWlzZSwgY2FuY2VsUHJvbWlzZV0pLAogICAgcmVzcG9uc2U6IHsKICAgICAgYWN0aW9uOiAnc3RhcnRpbmcnLAogICAgfQogIH07CgogIGNhbmNlbC5yZW1vdmUoKTsKCiAgLy8gRGlzYWJsZSB0aGUgaW5wdXQgZWxlbWVudCBzaW5jZSBmdXJ0aGVyIHBpY2tzIGFyZSBub3QgYWxsb3dlZC4KICBpbnB1dEVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlOwoKICBpZiAoIWZpbGVzKSB7CiAgICByZXR1cm4gewogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgICAgfQogICAgfTsKICB9CgogIGZvciAoY29uc3QgZmlsZSBvZiBmaWxlcykgewogICAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpOwogICAgbGkuYXBwZW5kKHNwYW4oZmlsZS5uYW1lLCB7Zm9udFdlaWdodDogJ2JvbGQnfSkpOwogICAgbGkuYXBwZW5kKHNwYW4oCiAgICAgICAgYCgke2ZpbGUudHlwZSB8fCAnbi9hJ30pIC0gJHtmaWxlLnNpemV9IGJ5dGVzLCBgICsKICAgICAgICBgbGFzdCBtb2RpZmllZDogJHsKICAgICAgICAgICAgZmlsZS5sYXN0TW9kaWZpZWREYXRlID8gZmlsZS5sYXN0TW9kaWZpZWREYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygpIDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ24vYSd9IC0gYCkpOwogICAgY29uc3QgcGVyY2VudCA9IHNwYW4oJzAlIGRvbmUnKTsKICAgIGxpLmFwcGVuZENoaWxkKHBlcmNlbnQpOwoKICAgIG91dHB1dEVsZW1lbnQuYXBwZW5kQ2hpbGQobGkpOwoKICAgIGNvbnN0IGZpbGVEYXRhUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4gewogICAgICAgIHJlc29sdmUoZS50YXJnZXQucmVzdWx0KTsKICAgICAgfTsKICAgICAgcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGZpbGUpOwogICAgfSk7CiAgICAvLyBXYWl0IGZvciB0aGUgZGF0YSB0byBiZSByZWFkeS4KICAgIGxldCBmaWxlRGF0YSA9IHlpZWxkIHsKICAgICAgcHJvbWlzZTogZmlsZURhdGFQcm9taXNlLAogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbnRpbnVlJywKICAgICAgfQogICAgfTsKCiAgICAvLyBVc2UgYSBjaHVua2VkIHNlbmRpbmcgdG8gYXZvaWQgbWVzc2FnZSBzaXplIGxpbWl0cy4gU2VlIGIvNjIxMTU2NjAuCiAgICBsZXQgcG9zaXRpb24gPSAwOwogICAgd2hpbGUgKHBvc2l0aW9uIDwgZmlsZURhdGEuYnl0ZUxlbmd0aCkgewogICAgICBjb25zdCBsZW5ndGggPSBNYXRoLm1pbihmaWxlRGF0YS5ieXRlTGVuZ3RoIC0gcG9zaXRpb24sIE1BWF9QQVlMT0FEX1NJWkUpOwogICAgICBjb25zdCBjaHVuayA9IG5ldyBVaW50OEFycmF5KGZpbGVEYXRhLCBwb3NpdGlvbiwgbGVuZ3RoKTsKICAgICAgcG9zaXRpb24gKz0gbGVuZ3RoOwoKICAgICAgY29uc3QgYmFzZTY0ID0gYnRvYShTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsIGNodW5rKSk7CiAgICAgIHlpZWxkIHsKICAgICAgICByZXNwb25zZTogewogICAgICAgICAgYWN0aW9uOiAnYXBwZW5kJywKICAgICAgICAgIGZpbGU6IGZpbGUubmFtZSwKICAgICAgICAgIGRhdGE6IGJhc2U2NCwKICAgICAgICB9LAogICAgICB9OwogICAgICBwZXJjZW50LnRleHRDb250ZW50ID0KICAgICAgICAgIGAke01hdGgucm91bmQoKHBvc2l0aW9uIC8gZmlsZURhdGEuYnl0ZUxlbmd0aCkgKiAxMDApfSUgZG9uZWA7CiAgICB9CiAgfQoKICAvLyBBbGwgZG9uZS4KICB5aWVsZCB7CiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICB9CiAgfTsKfQoKc2NvcGUuZ29vZ2xlID0gc2NvcGUuZ29vZ2xlIHx8IHt9OwpzY29wZS5nb29nbGUuY29sYWIgPSBzY29wZS5nb29nbGUuY29sYWIgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYi5fZmlsZXMgPSB7CiAgX3VwbG9hZEZpbGVzLAogIF91cGxvYWRGaWxlc0NvbnRpbnVlLAp9Owp9KShzZWxmKTsK","ok":true,"headers":[["content-type","application/javascript"]],"status":200,"status_text":""}},"base_uri":"https://localhost:8080/","height":73},"executionInfo":{"status":"ok","timestamp":1612310130542,"user_tz":420,"elapsed":46136,"user":{"displayName":"MOSTOFA NAJMUS SAKIB","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhD_cyrcHDUS-0AuyO_Nk9IIjVxl6P0cIiRsl6ecg=s64","userId":"10398238725876788353"}},"outputId":"f7594c34-ea7b-4fd6-ee70-b794226b2ba4"},"source":["from google.colab import files\n","uploaded = files.upload()"],"execution_count":2,"outputs":[{"output_type":"display_data","data":{"text/html":["\n","     <input type=\"file\" id=\"files-a18a2c7a-04e1-4754-8aed-21cfcfc7f365\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-a18a2c7a-04e1-4754-8aed-21cfcfc7f365\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script src=\"/nbextensions/google.colab/files.js\"></script> "],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["Saving classification_file.xlsx to classification_file.xlsx\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"yjANxSilpJnW","executionInfo":{"status":"ok","timestamp":1612310134287,"user_tz":420,"elapsed":389,"user":{"displayName":"MOSTOFA NAJMUS SAKIB","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhD_cyrcHDUS-0AuyO_Nk9IIjVxl6P0cIiRsl6ecg=s64","userId":"10398238725876788353"}}},"source":["classification_file=pd.read_excel(r'classification_file.xlsx')\n"],"execution_count":3,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":241},"id":"hLnYPrsG851B","executionInfo":{"status":"ok","timestamp":1612205766491,"user_tz":420,"elapsed":411,"user":{"displayName":"MOSTOFA NAJMUS SAKIB","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhD_cyrcHDUS-0AuyO_Nk9IIjVxl6P0cIiRsl6ecg=s64","userId":"10398238725876788353"}},"outputId":"fe9a8ba6-9661-499d-ea78-d6d15396f6bb"},"source":["classification_file.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>news_id_</th>\n","      <th>count_at</th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>10</th>\n","      <th>11</th>\n","      <th>12</th>\n","      <th>13</th>\n","      <th>14</th>\n","      <th>15</th>\n","      <th>16</th>\n","      <th>17</th>\n","      <th>18</th>\n","      <th>19</th>\n","      <th>pros_title_length_y</th>\n","      <th>count_mentions</th>\n","      <th>count_video</th>\n","      <th>count_breaking</th>\n","      <th>count_No</th>\n","      <th>count_do_not</th>\n","      <th>count_never</th>\n","      <th>count_shares</th>\n","      <th>count_words</th>\n","      <th>count_uppercased</th>\n","      <th>count_lowercased</th>\n","      <th>count_punctuation</th>\n","      <th>count_words_title</th>\n","      <th>count_uppercased_title</th>\n","      <th>count_lowercased_title</th>\n","      <th>count_punctuation_title</th>\n","      <th>total_shares</th>\n","      <th>LABEL</th>\n","      <th>Number of followers</th>\n","      <th>number_of_authors</th>\n","      <th>polarity</th>\n","      <th>Average_closeness_unscaled</th>\n","      <th>Average_closeness</th>\n","      <th>Average_betweeness_unscaled</th>\n","      <th>Average_betweeness</th>\n","      <th>Average_eigen_vector_unscaled</th>\n","      <th>Average_eigen_vector</th>\n","      <th>Average_page_rank</th>\n","      <th>Average_page_rank_unscaled</th>\n","      <th>Average_degree_centrality_unscaled</th>\n","      <th>Average_degree_centrality</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>BuzzFeed_Real_21</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.602669</td>\n","      <td>0.0</td>\n","      <td>0.00000</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.392852</td>\n","      <td>0.0</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>465</td>\n","      <td>3</td>\n","      <td>416</td>\n","      <td>50</td>\n","      <td>16</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>94</td>\n","      <td>0</td>\n","      <td>107.365753</td>\n","      <td>2</td>\n","      <td>-1</td>\n","      <td>0.193783</td>\n","      <td>193.782855</td>\n","      <td>0.000062</td>\n","      <td>0.062470</td>\n","      <td>0.002389</td>\n","      <td>0.238881</td>\n","      <td>0.044382</td>\n","      <td>0.000044</td>\n","      <td>0.003143</td>\n","      <td>3.142872</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>BuzzFeed_Real_32</td>\n","      <td>0</td>\n","      <td>0.080987</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.096043</td>\n","      <td>0.0</td>\n","      <td>0.01432</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.323302</td>\n","      <td>0.0</td>\n","      <td>0.435749</td>\n","      <td>0.049476</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>156</td>\n","      <td>8</td>\n","      <td>123</td>\n","      <td>18</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>1228</td>\n","      <td>0</td>\n","      <td>203.868628</td>\n","      <td>2</td>\n","      <td>-1</td>\n","      <td>0.212159</td>\n","      <td>212.158780</td>\n","      <td>0.000117</td>\n","      <td>0.116672</td>\n","      <td>0.003437</td>\n","      <td>0.343710</td>\n","      <td>0.074050</td>\n","      <td>0.000074</td>\n","      <td>0.005666</td>\n","      <td>5.665569</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>BuzzFeed_Real_85</td>\n","      <td>0</td>\n","      <td>0.998140</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.00000</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>203</td>\n","      <td>1</td>\n","      <td>138</td>\n","      <td>65</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>49</td>\n","      <td>0</td>\n","      <td>140.922648</td>\n","      <td>1</td>\n","      <td>-1</td>\n","      <td>0.210404</td>\n","      <td>210.403518</td>\n","      <td>0.000056</td>\n","      <td>0.056008</td>\n","      <td>0.002846</td>\n","      <td>0.284610</td>\n","      <td>0.041852</td>\n","      <td>0.000042</td>\n","      <td>0.004280</td>\n","      <td>4.280319</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>BuzzFeed_Real_53</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.998227</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.00000</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>188</td>\n","      <td>3</td>\n","      <td>155</td>\n","      <td>37</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>11</td>\n","      <td>0</td>\n","      <td>65.251920</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0.184877</td>\n","      <td>184.877252</td>\n","      <td>0.000023</td>\n","      <td>0.022573</td>\n","      <td>0.002241</td>\n","      <td>0.224061</td>\n","      <td>0.023489</td>\n","      <td>0.000023</td>\n","      <td>0.002084</td>\n","      <td>2.084063</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>BuzzFeed_Real_42</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.00000</td>\n","      <td>0.0</td>\n","      <td>0.997795</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>304</td>\n","      <td>13</td>\n","      <td>234</td>\n","      <td>45</td>\n","      <td>10</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>735</td>\n","      <td>0</td>\n","      <td>203.897443</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0.204552</td>\n","      <td>204.552373</td>\n","      <td>0.000171</td>\n","      <td>0.170894</td>\n","      <td>0.003188</td>\n","      <td>0.318800</td>\n","      <td>0.075728</td>\n","      <td>0.000076</td>\n","      <td>0.005573</td>\n","      <td>5.573110</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["           news_id_  ...  Average_degree_centrality\n","0  BuzzFeed_Real_21  ...                   3.142872\n","1  BuzzFeed_Real_32  ...                   5.665569\n","2  BuzzFeed_Real_85  ...                   4.280319\n","3  BuzzFeed_Real_53  ...                   2.084063\n","4  BuzzFeed_Real_42  ...                   5.573110\n","\n","[5 rows x 53 columns]"]},"metadata":{"tags":[]},"execution_count":11}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"f77knaV69BEr","executionInfo":{"status":"ok","timestamp":1612205798534,"user_tz":420,"elapsed":536,"user":{"displayName":"MOSTOFA NAJMUS SAKIB","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhD_cyrcHDUS-0AuyO_Nk9IIjVxl6P0cIiRsl6ecg=s64","userId":"10398238725876788353"}},"outputId":"7045f33e-e2dc-4267-8811-d313409e1bfe"},"source":["classification_file.columns"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['news_id_', 'count_at', '0', '1', '2', '3', '4', '5', '6', '7', '8',\n","       '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19',\n","       'pros_title_length_y', 'count_mentions', 'count_video',\n","       'count_breaking', 'count_No', 'count_do_not', 'count_never',\n","       'count_shares', 'count_words', 'count_uppercased', 'count_lowercased',\n","       'count_punctuation', 'count_words_title', 'count_uppercased_title',\n","       'count_lowercased_title', 'count_punctuation_title', 'total_shares',\n","       'LABEL', 'Number of followers', 'number_of_authors', 'polarity',\n","       'Average_closeness_unscaled', 'Average_closeness',\n","       'Average_betweeness_unscaled', 'Average_betweeness',\n","       'Average_eigen_vector_unscaled', 'Average_eigen_vector',\n","       'Average_page_rank', 'Average_page_rank_unscaled',\n","       'Average_degree_centrality_unscaled', 'Average_degree_centrality'],\n","      dtype='object')"]},"metadata":{"tags":[]},"execution_count":12}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":456},"id":"_iqp_neD8KKD","executionInfo":{"status":"ok","timestamp":1612211219006,"user_tz":420,"elapsed":381,"user":{"displayName":"MOSTOFA NAJMUS SAKIB","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhD_cyrcHDUS-0AuyO_Nk9IIjVxl6P0cIiRsl6ecg=s64","userId":"10398238725876788353"}},"outputId":"f7b46d3b-4134-4a31-f60e-4ed2f067ce39"},"source":["# type(classification_file)\r\n","classification_file"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>news_id_</th>\n","      <th>count_at</th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>10</th>\n","      <th>11</th>\n","      <th>12</th>\n","      <th>13</th>\n","      <th>14</th>\n","      <th>15</th>\n","      <th>16</th>\n","      <th>17</th>\n","      <th>18</th>\n","      <th>19</th>\n","      <th>pros_title_length_y</th>\n","      <th>count_mentions</th>\n","      <th>count_video</th>\n","      <th>count_breaking</th>\n","      <th>count_No</th>\n","      <th>count_do_not</th>\n","      <th>count_never</th>\n","      <th>count_shares</th>\n","      <th>count_words</th>\n","      <th>count_uppercased</th>\n","      <th>count_lowercased</th>\n","      <th>count_punctuation</th>\n","      <th>count_words_title</th>\n","      <th>count_uppercased_title</th>\n","      <th>count_lowercased_title</th>\n","      <th>count_punctuation_title</th>\n","      <th>total_shares</th>\n","      <th>LABEL</th>\n","      <th>Number of followers</th>\n","      <th>number_of_authors</th>\n","      <th>polarity</th>\n","      <th>Average_closeness_unscaled</th>\n","      <th>Average_closeness</th>\n","      <th>Average_betweeness_unscaled</th>\n","      <th>Average_betweeness</th>\n","      <th>Average_eigen_vector_unscaled</th>\n","      <th>Average_eigen_vector</th>\n","      <th>Average_page_rank</th>\n","      <th>Average_page_rank_unscaled</th>\n","      <th>Average_degree_centrality_unscaled</th>\n","      <th>Average_degree_centrality</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>BuzzFeed_Real_21</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.602669</td>\n","      <td>0.0</td>\n","      <td>0.00000</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.392852</td>\n","      <td>0.0</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>465</td>\n","      <td>3</td>\n","      <td>416</td>\n","      <td>50</td>\n","      <td>16</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>94</td>\n","      <td>0</td>\n","      <td>107.365753</td>\n","      <td>2</td>\n","      <td>-1</td>\n","      <td>0.193783</td>\n","      <td>193.782855</td>\n","      <td>0.000062</td>\n","      <td>0.062470</td>\n","      <td>0.002389</td>\n","      <td>0.238881</td>\n","      <td>0.044382</td>\n","      <td>0.000044</td>\n","      <td>0.003143</td>\n","      <td>3.142872</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>BuzzFeed_Real_32</td>\n","      <td>0</td>\n","      <td>0.080987</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.096043</td>\n","      <td>0.0</td>\n","      <td>0.01432</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.323302</td>\n","      <td>0.0</td>\n","      <td>0.435749</td>\n","      <td>0.049476</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>156</td>\n","      <td>8</td>\n","      <td>123</td>\n","      <td>18</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>1228</td>\n","      <td>0</td>\n","      <td>203.868628</td>\n","      <td>2</td>\n","      <td>-1</td>\n","      <td>0.212159</td>\n","      <td>212.158780</td>\n","      <td>0.000117</td>\n","      <td>0.116672</td>\n","      <td>0.003437</td>\n","      <td>0.343710</td>\n","      <td>0.074050</td>\n","      <td>0.000074</td>\n","      <td>0.005666</td>\n","      <td>5.665569</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>BuzzFeed_Real_85</td>\n","      <td>0</td>\n","      <td>0.998140</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.00000</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>203</td>\n","      <td>1</td>\n","      <td>138</td>\n","      <td>65</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>49</td>\n","      <td>0</td>\n","      <td>140.922648</td>\n","      <td>1</td>\n","      <td>-1</td>\n","      <td>0.210404</td>\n","      <td>210.403518</td>\n","      <td>0.000056</td>\n","      <td>0.056008</td>\n","      <td>0.002846</td>\n","      <td>0.284610</td>\n","      <td>0.041852</td>\n","      <td>0.000042</td>\n","      <td>0.004280</td>\n","      <td>4.280319</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>BuzzFeed_Real_53</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.998227</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.00000</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>188</td>\n","      <td>3</td>\n","      <td>155</td>\n","      <td>37</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>11</td>\n","      <td>0</td>\n","      <td>65.251920</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0.184877</td>\n","      <td>184.877252</td>\n","      <td>0.000023</td>\n","      <td>0.022573</td>\n","      <td>0.002241</td>\n","      <td>0.224061</td>\n","      <td>0.023489</td>\n","      <td>0.000023</td>\n","      <td>0.002084</td>\n","      <td>2.084063</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>BuzzFeed_Real_42</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.00000</td>\n","      <td>0.0</td>\n","      <td>0.997795</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>304</td>\n","      <td>13</td>\n","      <td>234</td>\n","      <td>45</td>\n","      <td>10</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>735</td>\n","      <td>0</td>\n","      <td>203.897443</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0.204552</td>\n","      <td>204.552373</td>\n","      <td>0.000171</td>\n","      <td>0.170894</td>\n","      <td>0.003188</td>\n","      <td>0.318800</td>\n","      <td>0.075728</td>\n","      <td>0.000076</td>\n","      <td>0.005573</td>\n","      <td>5.573110</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>417</th>\n","      <td>PolitiFact_Fake_236</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.00000</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.023474</td>\n","      <td>0.0</td>\n","      <td>0.975366</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>326</td>\n","      <td>1</td>\n","      <td>278</td>\n","      <td>40</td>\n","      <td>15</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>91</td>\n","      <td>1</td>\n","      <td>137.593792</td>\n","      <td>1</td>\n","      <td>-1</td>\n","      <td>0.171432</td>\n","      <td>171.432082</td>\n","      <td>0.000092</td>\n","      <td>0.092333</td>\n","      <td>0.002346</td>\n","      <td>0.234602</td>\n","      <td>0.030926</td>\n","      <td>0.000031</td>\n","      <td>0.002271</td>\n","      <td>2.271405</td>\n","    </tr>\n","    <tr>\n","      <th>418</th>\n","      <td>PolitiFact_Fake_237</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>0.027476</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.00000</td>\n","      <td>0.0</td>\n","      <td>0.971001</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>183</td>\n","      <td>0</td>\n","      <td>160</td>\n","      <td>12</td>\n","      <td>14</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>93.939759</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0.165654</td>\n","      <td>165.653868</td>\n","      <td>0.000061</td>\n","      <td>0.061460</td>\n","      <td>0.000260</td>\n","      <td>0.025960</td>\n","      <td>0.031185</td>\n","      <td>0.000031</td>\n","      <td>0.001712</td>\n","      <td>1.712083</td>\n","    </tr>\n","    <tr>\n","      <th>419</th>\n","      <td>PolitiFact_Fake_238</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.00000</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.997715</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>616</td>\n","      <td>3</td>\n","      <td>538</td>\n","      <td>91</td>\n","      <td>12</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>30</td>\n","      <td>1</td>\n","      <td>91.228647</td>\n","      <td>1</td>\n","      <td>-1</td>\n","      <td>0.179465</td>\n","      <td>179.464594</td>\n","      <td>0.000085</td>\n","      <td>0.085056</td>\n","      <td>0.002622</td>\n","      <td>0.262225</td>\n","      <td>0.037013</td>\n","      <td>0.000037</td>\n","      <td>0.002166</td>\n","      <td>2.166010</td>\n","    </tr>\n","    <tr>\n","      <th>420</th>\n","      <td>PolitiFact_Fake_239</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.00000</td>\n","      <td>0.0</td>\n","      <td>0.998291</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>198</td>\n","      <td>2</td>\n","      <td>164</td>\n","      <td>32</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>10.395349</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0.148387</td>\n","      <td>148.386982</td>\n","      <td>0.000001</td>\n","      <td>0.001434</td>\n","      <td>0.000098</td>\n","      <td>0.009841</td>\n","      <td>0.009147</td>\n","      <td>0.000009</td>\n","      <td>0.000299</td>\n","      <td>0.299315</td>\n","    </tr>\n","    <tr>\n","      <th>421</th>\n","      <td>PolitiFact_Fake_240</td>\n","      <td>0</td>\n","      <td>0.177216</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.00000</td>\n","      <td>0.0</td>\n","      <td>0.492062</td>\n","      <td>0.299493</td>\n","      <td>0.0</td>\n","      <td>0.030679</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>239</td>\n","      <td>3</td>\n","      <td>194</td>\n","      <td>22</td>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>110</td>\n","      <td>1</td>\n","      <td>179.357628</td>\n","      <td>1</td>\n","      <td>-1</td>\n","      <td>0.187203</td>\n","      <td>187.202734</td>\n","      <td>0.000103</td>\n","      <td>0.102911</td>\n","      <td>0.002945</td>\n","      <td>0.294530</td>\n","      <td>0.048146</td>\n","      <td>0.000048</td>\n","      <td>0.002388</td>\n","      <td>2.387721</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>422 rows × 53 columns</p>\n","</div>"],"text/plain":["                news_id_  ...  Average_degree_centrality\n","0       BuzzFeed_Real_21  ...                   3.142872\n","1       BuzzFeed_Real_32  ...                   5.665569\n","2       BuzzFeed_Real_85  ...                   4.280319\n","3       BuzzFeed_Real_53  ...                   2.084063\n","4       BuzzFeed_Real_42  ...                   5.573110\n","..                   ...  ...                        ...\n","417  PolitiFact_Fake_236  ...                   2.271405\n","418  PolitiFact_Fake_237  ...                   1.712083\n","419  PolitiFact_Fake_238  ...                   2.166010\n","420  PolitiFact_Fake_239  ...                   0.299315\n","421  PolitiFact_Fake_240  ...                   2.387721\n","\n","[422 rows x 53 columns]"]},"metadata":{"tags":[]},"execution_count":13}]},{"cell_type":"code","metadata":{"id":"ccoZnwZHso8F","executionInfo":{"status":"ok","timestamp":1612310150190,"user_tz":420,"elapsed":448,"user":{"displayName":"MOSTOFA NAJMUS SAKIB","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhD_cyrcHDUS-0AuyO_Nk9IIjVxl6P0cIiRsl6ecg=s64","userId":"10398238725876788353"}}},"source":["#The below selected features are run in our experiments and gives a decent accuracy without LDA features.\n","classification_train = classification_file[['count_mentions','count_video','count_breaking',\n","       'count_No', 'count_do_not','count_No', 'count_never', 'count_shares',\n","       'count_words', 'count_uppercased', 'count_lowercased',\n","       'count_punctuation', 'count_words_title', 'count_uppercased_title','count_lowercased_title', 'count_punctuation_title',\n","       'LABEL', 'number_of_authors', 'polarity',\n","       'pros_title_length_y','Average_degree_centrality','Average_betweeness']]                          #'Average_page_rank','Average_betweeness','Average_page_rank','Average_degree_centrality','Average_eigen_vector', 'number_of_authors','polarity',\n","y =  classification_train.LABEL\n","X =  classification_train.drop('LABEL',axis=1)\n","scaler=StandardScaler()\n","scaled_X = scaler.fit_transform(X)\n"],"execution_count":4,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":162},"id":"VMi2CYHmj2ea","executionInfo":{"status":"error","timestamp":1612310153268,"user_tz":420,"elapsed":387,"user":{"displayName":"MOSTOFA NAJMUS SAKIB","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhD_cyrcHDUS-0AuyO_Nk9IIjVxl6P0cIiRsl6ecg=s64","userId":"10398238725876788353"}},"outputId":"ad3b298e-7fed-4cf4-b03c-34fb8688bd9f"},"source":["X[test_index][1]"],"execution_count":5,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-5-2b88bd4d178e>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mX\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mtest_index\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'test_index' is not defined"]}]},{"cell_type":"code","metadata":{"id":"EeIuqeKn6Cw8","colab":{"base_uri":"https://localhost:8080/","height":357},"executionInfo":{"status":"error","timestamp":1612215523359,"user_tz":420,"elapsed":494,"user":{"displayName":"MOSTOFA NAJMUS SAKIB","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhD_cyrcHDUS-0AuyO_Nk9IIjVxl6P0cIiRsl6ecg=s64","userId":"10398238725876788353"}},"outputId":"886c065f-d6e5-4f88-eae0-401ef984a651"},"source":["  kf = StratifiedKFold(n_splits=10,shuffle=True,random_state=100)\r\n","  for train_index,test_index in kf.split(X,y):\r\n","        #print('{} of KFold {}'.format(i,kf.n_splits))\r\n","    xtr,xvl = X[train_index],X[test_index]\r\n","    ytr,yvl = y[train_index],y[test_index]"],"execution_count":null,"outputs":[{"output_type":"error","ename":"KeyError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m<ipython-input-28-b4bc4e3280a9>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mtrain_index\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mtest_index\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mkf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msplit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m       \u001b[0;31m#print('{} of KFold {}'.format(i,kf.n_splits))\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m   \u001b[0mxtr\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mxvl\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mtrain_index\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mtest_index\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m   \u001b[0mytr\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0myvl\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mtrain_index\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mtest_index\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   2910\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mis_iterator\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2911\u001b[0m                 \u001b[0mkey\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2912\u001b[0;31m             \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mloc\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_listlike_indexer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mraise_missing\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2913\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2914\u001b[0m         \u001b[0;31m# take() does not accept boolean indexers\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/core/indexing.py\u001b[0m in \u001b[0;36m_get_listlike_indexer\u001b[0;34m(self, key, axis, raise_missing)\u001b[0m\n\u001b[1;32m   1252\u001b[0m             \u001b[0mkeyarr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindexer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnew_indexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_reindex_non_unique\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkeyarr\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1253\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1254\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_validate_read_indexer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkeyarr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindexer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mraise_missing\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mraise_missing\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1255\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mkeyarr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindexer\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1256\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/core/indexing.py\u001b[0m in \u001b[0;36m_validate_read_indexer\u001b[0;34m(self, key, indexer, axis, raise_missing)\u001b[0m\n\u001b[1;32m   1296\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mmissing\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1297\u001b[0m                 \u001b[0maxis_name\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_axis_name\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1298\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"None of [{key}] are in the [{axis_name}]\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1299\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1300\u001b[0m             \u001b[0;31m# We (temporarily) allow for some missing keys with .loc, except in\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: \"None of [Int64Index([  0,   1,   2,   3,   4,   5,   6,   7,   8,   9,\\n            ...\\n            410, 411, 412, 413, 414, 415, 416, 418, 419, 421],\\n           dtype='int64', length=379)] are in the [columns]\""]}]},{"cell_type":"code","metadata":{"id":"pK5Pf_ZxzTHg","executionInfo":{"status":"ok","timestamp":1612310361323,"user_tz":420,"elapsed":390,"user":{"displayName":"MOSTOFA NAJMUS SAKIB","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhD_cyrcHDUS-0AuyO_Nk9IIjVxl6P0cIiRsl6ecg=s64","userId":"10398238725876788353"}}},"source":["def classify(X,y,classifier):   \n","    kf = StratifiedKFold(n_splits=10,shuffle=True,random_state=100)\n","    acc_score=[]\n","    prec_score =[]\n","    f_score =[]\n","    reca_score =[]\n","    i=1\n","    for train_index,test_index in kf.split(X,y):\n","        #print('{} of KFold {}'.format(i,kf.n_splits))\n","        xtr,xvl = X[train_index],X[test_index]\n","        ytr,yvl = y[train_index],y[test_index]\n","\n","        #model\n","        clfr = classifier\n","        print(ytr)\n","        clfr.fit(xtr,ytr)\n","        pred2= clfr.predict(xvl) \n","        Accuracy= accuracy_score(yvl, pred2)\n","        #confusion matrix',confusion_matrix(yvl, pred))\n","        recall = metrics.recall_score(yvl, pred2)\n","        precision = metrics.precision_score(yvl, pred2)\n","        fscore=metrics.f1_score(yvl, pred2)\n","        print(metrics.confusion_matrix(yvl,pred2))\n","        \n","        #print('confusion matrix',confusion_matrix(yvl, pred2))\n","        #print('precision_recall_fscore_support',precision_recall_fscore_support(yvl, pred2))\n","        acc_score.append(Accuracy)\n","        prec_score.append(precision)\n","        reca_score.append(recall)\n","        f_score.append(fscore)\n","        i+=1\n","    e = (sum(acc_score)/len(acc_score))\n","    f= (sum(prec_score)/len(prec_score))\n","    g=(sum(reca_score)/len(reca_score))\n","    h=(sum(f_score)/len(f_score))\n","    print(classifier,':')\n","    print('\\033[1m'+'Average of all Precision :' +'\\033[0m',f)\n","    print('\\033[1m'+'Average of all Accuracy :' +'\\033[0m',e)\n","    print('\\033[1m'+'Average of all Recall :' +'\\033[0m',g)\n","    print('\\033[1m'+'Average of all F1-score :' +'\\033[0m',h)\n","    return e,f,g,h\n","    \n"],"execution_count":12,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RD06iHPlUBNp","executionInfo":{"status":"ok","timestamp":1612312495928,"user_tz":420,"elapsed":341,"user":{"displayName":"MOSTOFA NAJMUS SAKIB","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhD_cyrcHDUS-0AuyO_Nk9IIjVxl6P0cIiRsl6ecg=s64","userId":"10398238725876788353"}},"outputId":"d8231a9f-1028-4fb1-c3df-05b219c571a6"},"source":["y"],"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0      0\n","1      0\n","2      0\n","3      0\n","4      0\n","      ..\n","417    1\n","418    1\n","419    1\n","420    1\n","421    1\n","Name: LABEL, Length: 422, dtype: int64"]},"metadata":{"tags":[]},"execution_count":15}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BQMaInhAzTHg","executionInfo":{"status":"ok","timestamp":1612310370792,"user_tz":420,"elapsed":8711,"user":{"displayName":"MOSTOFA NAJMUS SAKIB","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhD_cyrcHDUS-0AuyO_Nk9IIjVxl6P0cIiRsl6ecg=s64","userId":"10398238725876788353"}},"outputId":"629b0ead-a4c3-4935-c7b4-e0f693272e89"},"source":["def call_classify(X,y):    #our dataset is not imbalanced\n","    accuracy=[]\n","    avg_precision=[]\n","    recall=[]\n","    f_score=[]\n","    classifiers = [RandomForestClassifier(n_estimators=200,n_jobs=-1,random_state=100),\n","                   LogisticRegression(random_state=100),SVC(kernel='linear',random_state=100,probability=True),\n","                   ExtraTreesClassifier(n_estimators=100, random_state=100),GaussianNB(),\n","                   xgb.XGBClassifier(objective=\"binary:logistic\", random_state=100)]\n","    for classifier in (classifiers):\n","            e,f,g,h = classify(X,y,classifier)\n","            accuracy.append(e*100)\n","            avg_precision.append(f*100)\n","            recall.append(g*100)\n","            f_score.append(h*100)\n","    return accuracy,f_score,avg_precision,recall\n","classif = ['Random Forest','Logistic_regression','SVM','Extratrees classifier','GaussianNB','XGBoost']        \n","\n","e1,f1,g1,h1=call_classify(scaled_X,y) \n"],"execution_count":13,"outputs":[{"output_type":"stream","text":["0      0\n","1      0\n","2      0\n","3      0\n","4      0\n","      ..\n","415    1\n","416    1\n","418    1\n","419    1\n","421    1\n","Name: LABEL, Length: 379, dtype: int64\n","[[19  3]\n"," [ 5 16]]\n","0      0\n","2      0\n","3      0\n","4      0\n","5      0\n","      ..\n","417    1\n","418    1\n","419    1\n","420    1\n","421    1\n","Name: LABEL, Length: 379, dtype: int64\n","[[20  1]\n"," [ 2 20]]\n","0      0\n","1      0\n","2      0\n","3      0\n","4      0\n","      ..\n","416    1\n","417    1\n","418    1\n","420    1\n","421    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[17  4]\n"," [ 4 17]]\n","0      0\n","1      0\n","2      0\n","4      0\n","6      0\n","      ..\n","417    1\n","418    1\n","419    1\n","420    1\n","421    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[18  3]\n"," [ 3 18]]\n","0      0\n","1      0\n","2      0\n","3      0\n","4      0\n","      ..\n","416    1\n","417    1\n","418    1\n","419    1\n","420    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[18  3]\n"," [ 3 18]]\n","1      0\n","2      0\n","3      0\n","5      0\n","6      0\n","      ..\n","417    1\n","418    1\n","419    1\n","420    1\n","421    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[21  0]\n"," [ 4 17]]\n","0      0\n","1      0\n","2      0\n","3      0\n","4      0\n","      ..\n","417    1\n","418    1\n","419    1\n","420    1\n","421    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[19  2]\n"," [ 1 20]]\n","0      0\n","1      0\n","2      0\n","3      0\n","4      0\n","      ..\n","417    1\n","418    1\n","419    1\n","420    1\n","421    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[19  2]\n"," [ 4 17]]\n","0      0\n","1      0\n","3      0\n","4      0\n","5      0\n","      ..\n","417    1\n","418    1\n","419    1\n","420    1\n","421    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[14  7]\n"," [ 4 17]]\n","0      0\n","1      0\n","2      0\n","3      0\n","4      0\n","      ..\n","416    1\n","417    1\n","419    1\n","420    1\n","421    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[17  4]\n"," [ 3 18]]\n","RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,\n","                       criterion='gini', max_depth=None, max_features='auto',\n","                       max_leaf_nodes=None, max_samples=None,\n","                       min_impurity_decrease=0.0, min_impurity_split=None,\n","                       min_samples_leaf=1, min_samples_split=2,\n","                       min_weight_fraction_leaf=0.0, n_estimators=200,\n","                       n_jobs=-1, oob_score=False, random_state=100, verbose=0,\n","                       warm_start=False) :\n","\u001b[1mAverage of all Precision :\u001b[0m 0.8648638642059694\n","\u001b[1mAverage of all Accuracy :\u001b[0m 0.8529900332225914\n","\u001b[1mAverage of all Recall :\u001b[0m 0.8432900432900432\n","\u001b[1mAverage of all F1-score :\u001b[0m 0.8521776340074995\n","0      0\n","1      0\n","2      0\n","3      0\n","4      0\n","      ..\n","415    1\n","416    1\n","418    1\n","419    1\n","421    1\n","Name: LABEL, Length: 379, dtype: int64\n","[[15  7]\n"," [ 3 18]]\n","0      0\n","2      0\n","3      0\n","4      0\n","5      0\n","      ..\n","417    1\n","418    1\n","419    1\n","420    1\n","421    1\n","Name: LABEL, Length: 379, dtype: int64\n","[[18  3]\n"," [ 6 16]]\n","0      0\n","1      0\n","2      0\n","3      0\n","4      0\n","      ..\n","416    1\n","417    1\n","418    1\n","420    1\n","421    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[18  3]\n"," [ 5 16]]\n","0      0\n","1      0\n","2      0\n","4      0\n","6      0\n","      ..\n","417    1\n","418    1\n","419    1\n","420    1\n","421    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[15  6]\n"," [ 6 15]]\n","0      0\n","1      0\n","2      0\n","3      0\n","4      0\n","      ..\n","416    1\n","417    1\n","418    1\n","419    1\n","420    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[14  7]\n"," [ 3 18]]\n","1      0\n","2      0\n","3      0\n","5      0\n","6      0\n","      ..\n","417    1\n","418    1\n","419    1\n","420    1\n","421    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[19  2]\n"," [ 1 20]]\n","0      0\n","1      0\n","2      0\n","3      0\n","4      0\n","      ..\n","417    1\n","418    1\n","419    1\n","420    1\n","421    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[19  2]\n"," [ 5 16]]\n","0      0\n","1      0\n","2      0\n","3      0\n","4      0\n","      ..\n","417    1\n","418    1\n","419    1\n","420    1\n","421    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[16  5]\n"," [ 2 19]]\n","0      0\n","1      0\n","3      0\n","4      0\n","5      0\n","      ..\n","417    1\n","418    1\n","419    1\n","420    1\n","421    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[13  8]\n"," [ 7 14]]\n","0      0\n","1      0\n","2      0\n","3      0\n","4      0\n","      ..\n","416    1\n","417    1\n","419    1\n","420    1\n","421    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[16  5]\n"," [ 2 19]]\n","LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,\n","                   intercept_scaling=1, l1_ratio=None, max_iter=100,\n","                   multi_class='auto', n_jobs=None, penalty='l2',\n","                   random_state=100, solver='lbfgs', tol=0.0001, verbose=0,\n","                   warm_start=False) :\n","\u001b[1mAverage of all Precision :\u001b[0m 0.7856173008278272\n","\u001b[1mAverage of all Accuracy :\u001b[0m 0.7915282392026578\n","\u001b[1mAverage of all Recall :\u001b[0m 0.8108225108225108\n","\u001b[1mAverage of all F1-score :\u001b[0m 0.7950787968707029\n","0      0\n","1      0\n","2      0\n","3      0\n","4      0\n","      ..\n","415    1\n","416    1\n","418    1\n","419    1\n","421    1\n","Name: LABEL, Length: 379, dtype: int64\n","[[17  5]\n"," [ 4 17]]\n","0      0\n","2      0\n","3      0\n","4      0\n","5      0\n","      ..\n","417    1\n","418    1\n","419    1\n","420    1\n","421    1\n","Name: LABEL, Length: 379, dtype: int64\n","[[18  3]\n"," [ 6 16]]\n","0      0\n","1      0\n","2      0\n","3      0\n","4      0\n","      ..\n","416    1\n","417    1\n","418    1\n","420    1\n","421    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[18  3]\n"," [ 6 15]]\n","0      0\n","1      0\n","2      0\n","4      0\n","6      0\n","      ..\n","417    1\n","418    1\n","419    1\n","420    1\n","421    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[16  5]\n"," [ 6 15]]\n","0      0\n","1      0\n","2      0\n","3      0\n","4      0\n","      ..\n","416    1\n","417    1\n","418    1\n","419    1\n","420    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[15  6]\n"," [ 3 18]]\n","1      0\n","2      0\n","3      0\n","5      0\n","6      0\n","      ..\n","417    1\n","418    1\n","419    1\n","420    1\n","421    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[18  3]\n"," [ 1 20]]\n","0      0\n","1      0\n","2      0\n","3      0\n","4      0\n","      ..\n","417    1\n","418    1\n","419    1\n","420    1\n","421    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[19  2]\n"," [ 5 16]]\n","0      0\n","1      0\n","2      0\n","3      0\n","4      0\n","      ..\n","417    1\n","418    1\n","419    1\n","420    1\n","421    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[17  4]\n"," [ 2 19]]\n","0      0\n","1      0\n","3      0\n","4      0\n","5      0\n","      ..\n","417    1\n","418    1\n","419    1\n","420    1\n","421    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[15  6]\n"," [ 7 14]]\n","0      0\n","1      0\n","2      0\n","3      0\n","4      0\n","      ..\n","416    1\n","417    1\n","419    1\n","420    1\n","421    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[14  7]\n"," [ 2 19]]\n","SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,\n","    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',\n","    max_iter=-1, probability=True, random_state=100, shrinking=True, tol=0.001,\n","    verbose=False) :\n","\u001b[1mAverage of all Precision :\u001b[0m 0.7963476162789663\n","\u001b[1mAverage of all Accuracy :\u001b[0m 0.796234772978959\n","\u001b[1mAverage of all Recall :\u001b[0m 0.8012987012987013\n","\u001b[1mAverage of all F1-score :\u001b[0m 0.7956801126406849\n","0      0\n","1      0\n","2      0\n","3      0\n","4      0\n","      ..\n","415    1\n","416    1\n","418    1\n","419    1\n","421    1\n","Name: LABEL, Length: 379, dtype: int64\n","[[19  3]\n"," [ 3 18]]\n","0      0\n","2      0\n","3      0\n","4      0\n","5      0\n","      ..\n","417    1\n","418    1\n","419    1\n","420    1\n","421    1\n","Name: LABEL, Length: 379, dtype: int64\n","[[19  2]\n"," [ 4 18]]\n","0      0\n","1      0\n","2      0\n","3      0\n","4      0\n","      ..\n","416    1\n","417    1\n","418    1\n","420    1\n","421    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[19  2]\n"," [ 3 18]]\n","0      0\n","1      0\n","2      0\n","4      0\n","6      0\n","      ..\n","417    1\n","418    1\n","419    1\n","420    1\n","421    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[17  4]\n"," [ 3 18]]\n","0      0\n","1      0\n","2      0\n","3      0\n","4      0\n","      ..\n","416    1\n","417    1\n","418    1\n","419    1\n","420    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[17  4]\n"," [ 3 18]]\n","1      0\n","2      0\n","3      0\n","5      0\n","6      0\n","      ..\n","417    1\n","418    1\n","419    1\n","420    1\n","421    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[21  0]\n"," [ 2 19]]\n","0      0\n","1      0\n","2      0\n","3      0\n","4      0\n","      ..\n","417    1\n","418    1\n","419    1\n","420    1\n","421    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[19  2]\n"," [ 0 21]]\n","0      0\n","1      0\n","2      0\n","3      0\n","4      0\n","      ..\n","417    1\n","418    1\n","419    1\n","420    1\n","421    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[19  2]\n"," [ 3 18]]\n","0      0\n","1      0\n","3      0\n","4      0\n","5      0\n","      ..\n","417    1\n","418    1\n","419    1\n","420    1\n","421    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[16  5]\n"," [ 3 18]]\n","0      0\n","1      0\n","2      0\n","3      0\n","4      0\n","      ..\n","416    1\n","417    1\n","419    1\n","420    1\n","421    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[18  3]\n"," [ 4 17]]\n","ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,\n","                     criterion='gini', max_depth=None, max_features='auto',\n","                     max_leaf_nodes=None, max_samples=None,\n","                     min_impurity_decrease=0.0, min_impurity_split=None,\n","                     min_samples_leaf=1, min_samples_split=2,\n","                     min_weight_fraction_leaf=0.0, n_estimators=100,\n","                     n_jobs=None, oob_score=False, random_state=100, verbose=0,\n","                     warm_start=False) :\n","\u001b[1mAverage of all Precision :\u001b[0m 0.8739158667419537\n","\u001b[1mAverage of all Accuracy :\u001b[0m 0.8697120708748616\n","\u001b[1mAverage of all Recall :\u001b[0m 0.8675324675324674\n","\u001b[1mAverage of all F1-score :\u001b[0m 0.8696797445322687\n","0      0\n","1      0\n","2      0\n","3      0\n","4      0\n","      ..\n","415    1\n","416    1\n","418    1\n","419    1\n","421    1\n","Name: LABEL, Length: 379, dtype: int64\n","[[12 10]\n"," [ 4 17]]\n","0      0\n","2      0\n","3      0\n","4      0\n","5      0\n","      ..\n","417    1\n","418    1\n","419    1\n","420    1\n","421    1\n","Name: LABEL, Length: 379, dtype: int64\n","[[14  7]\n"," [ 5 17]]\n","0      0\n","1      0\n","2      0\n","3      0\n","4      0\n","      ..\n","416    1\n","417    1\n","418    1\n","420    1\n","421    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[10 11]\n"," [ 2 19]]\n","0      0\n","1      0\n","2      0\n","4      0\n","6      0\n","      ..\n","417    1\n","418    1\n","419    1\n","420    1\n","421    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[14  7]\n"," [ 5 16]]\n","0      0\n","1      0\n","2      0\n","3      0\n","4      0\n","      ..\n","416    1\n","417    1\n","418    1\n","419    1\n","420    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[13  8]\n"," [ 3 18]]\n","1      0\n","2      0\n","3      0\n","5      0\n","6      0\n","      ..\n","417    1\n","418    1\n","419    1\n","420    1\n","421    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[14  7]\n"," [ 3 18]]\n","0      0\n","1      0\n","2      0\n","3      0\n","4      0\n","      ..\n","417    1\n","418    1\n","419    1\n","420    1\n","421    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[16  5]\n"," [ 2 19]]\n","0      0\n","1      0\n","2      0\n","3      0\n","4      0\n","      ..\n","417    1\n","418    1\n","419    1\n","420    1\n","421    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[11 10]\n"," [ 3 18]]\n","0      0\n","1      0\n","3      0\n","4      0\n","5      0\n","      ..\n","417    1\n","418    1\n","419    1\n","420    1\n","421    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[ 9 12]\n"," [ 4 17]]\n","0      0\n","1      0\n","2      0\n","3      0\n","4      0\n","      ..\n","416    1\n","417    1\n","419    1\n","420    1\n","421    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[12  9]\n"," [ 1 20]]\n","GaussianNB(priors=None, var_smoothing=1e-09) :\n","\u001b[1mAverage of all Precision :\u001b[0m 0.678964204100636\n","\u001b[1mAverage of all Accuracy :\u001b[0m 0.7204872646733113\n","\u001b[1mAverage of all Recall :\u001b[0m 0.8487012987012985\n","\u001b[1mAverage of all F1-score :\u001b[0m 0.7527538999060505\n","0      0\n","1      0\n","2      0\n","3      0\n","4      0\n","      ..\n","415    1\n","416    1\n","418    1\n","419    1\n","421    1\n","Name: LABEL, Length: 379, dtype: int64\n","[[17  5]\n"," [ 4 17]]\n","0      0\n","2      0\n","3      0\n","4      0\n","5      0\n","      ..\n","417    1\n","418    1\n","419    1\n","420    1\n","421    1\n","Name: LABEL, Length: 379, dtype: int64\n","[[19  2]\n"," [ 2 20]]\n","0      0\n","1      0\n","2      0\n","3      0\n","4      0\n","      ..\n","416    1\n","417    1\n","418    1\n","420    1\n","421    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[17  4]\n"," [ 2 19]]\n","0      0\n","1      0\n","2      0\n","4      0\n","6      0\n","      ..\n","417    1\n","418    1\n","419    1\n","420    1\n","421    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[17  4]\n"," [ 5 16]]\n","0      0\n","1      0\n","2      0\n","3      0\n","4      0\n","      ..\n","416    1\n","417    1\n","418    1\n","419    1\n","420    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[16  5]\n"," [ 4 17]]\n","1      0\n","2      0\n","3      0\n","5      0\n","6      0\n","      ..\n","417    1\n","418    1\n","419    1\n","420    1\n","421    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[19  2]\n"," [ 3 18]]\n","0      0\n","1      0\n","2      0\n","3      0\n","4      0\n","      ..\n","417    1\n","418    1\n","419    1\n","420    1\n","421    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[19  2]\n"," [ 3 18]]\n","0      0\n","1      0\n","2      0\n","3      0\n","4      0\n","      ..\n","417    1\n","418    1\n","419    1\n","420    1\n","421    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[19  2]\n"," [ 4 17]]\n","0      0\n","1      0\n","3      0\n","4      0\n","5      0\n","      ..\n","417    1\n","418    1\n","419    1\n","420    1\n","421    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[14  7]\n"," [ 4 17]]\n","0      0\n","1      0\n","2      0\n","3      0\n","4      0\n","      ..\n","416    1\n","417    1\n","419    1\n","420    1\n","421    1\n","Name: LABEL, Length: 380, dtype: int64\n","[[15  6]\n"," [ 2 19]]\n","XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,\n","              colsample_bynode=1, colsample_bytree=1, gamma=0,\n","              learning_rate=0.1, max_delta_step=0, max_depth=3,\n","              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,\n","              nthread=None, objective='binary:logistic', random_state=100,\n","              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,\n","              silent=None, subsample=1, verbosity=1) :\n","\u001b[1mAverage of all Precision :\u001b[0m 0.824370258650579\n","\u001b[1mAverage of all Accuracy :\u001b[0m 0.8292912513842747\n","\u001b[1mAverage of all Recall :\u001b[0m 0.8432900432900432\n","\u001b[1mAverage of all F1-score :\u001b[0m 0.8322350499495436\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OGGvg5DQLbd0","executionInfo":{"status":"ok","timestamp":1612310263022,"user_tz":420,"elapsed":398,"user":{"displayName":"MOSTOFA NAJMUS SAKIB","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhD_cyrcHDUS-0AuyO_Nk9IIjVxl6P0cIiRsl6ecg=s64","userId":"10398238725876788353"}},"outputId":"76c952d4-dcaf-4f00-ff66-2bcb2df390eb"},"source":["y"],"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0      0\n","1      0\n","2      0\n","3      0\n","4      0\n","      ..\n","417    1\n","418    1\n","419    1\n","420    1\n","421    1\n","Name: LABEL, Length: 422, dtype: int64"]},"metadata":{"tags":[]},"execution_count":11}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":233},"id":"33CHoW4TzTHh","executionInfo":{"status":"ok","timestamp":1606961622411,"user_tz":420,"elapsed":8104,"user":{"displayName":"Abishai Joy","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgdYPXDTI0VUBBqyosw2ywTi86EJFcwbYxBsPKI=s64","userId":"00146332931227246855"}},"outputId":"4934f91e-6649-43ce-9036-e277d6c96109"},"source":["result = pd.DataFrame(\n","    {'Classifier': classif,\n","     'Accuracy': e1,\n","     'Precision': f1,\n","     'Recall': g1,\n","     'F1-score': h1,\n","    })\n","\n","result"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Classifier</th>\n","      <th>Accuracy</th>\n","      <th>Precision</th>\n","      <th>Recall</th>\n","      <th>F1-score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Random Forest</td>\n","      <td>85.299003</td>\n","      <td>85.217763</td>\n","      <td>86.486386</td>\n","      <td>84.329004</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Logistic_regression</td>\n","      <td>79.152824</td>\n","      <td>79.507880</td>\n","      <td>78.561730</td>\n","      <td>81.082251</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>SVM</td>\n","      <td>79.623477</td>\n","      <td>79.568011</td>\n","      <td>79.634762</td>\n","      <td>80.129870</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Extratrees classifier</td>\n","      <td>86.971207</td>\n","      <td>86.967974</td>\n","      <td>87.391587</td>\n","      <td>86.753247</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>GaussianNB</td>\n","      <td>72.048726</td>\n","      <td>75.275390</td>\n","      <td>67.896420</td>\n","      <td>84.870130</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>XGBoost</td>\n","      <td>82.929125</td>\n","      <td>83.223505</td>\n","      <td>82.437026</td>\n","      <td>84.329004</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["              Classifier   Accuracy  Precision     Recall   F1-score\n","0          Random Forest  85.299003  85.217763  86.486386  84.329004\n","1    Logistic_regression  79.152824  79.507880  78.561730  81.082251\n","2                    SVM  79.623477  79.568011  79.634762  80.129870\n","3  Extratrees classifier  86.971207  86.967974  87.391587  86.753247\n","4             GaussianNB  72.048726  75.275390  67.896420  84.870130\n","5                XGBoost  82.929125  83.223505  82.437026  84.329004"]},"metadata":{"tags":[]},"execution_count":156}]},{"cell_type":"markdown","metadata":{"id":"wo0o5ufe-xBl"},"source":["Without LDA features, it gives 86.9 accuracy for Extra trees. Now we will see with LDA features."]},{"cell_type":"code","metadata":{"id":"zwjB-T_yvsZS"},"source":["#The below selected features with LDA features\n","classification_train = classification_file[['1','2','3','4','5','6','7','8','9','10','11',\n","       'count_No','count_No', 'count_never', 'count_shares',\n","       'count_words', 'count_uppercased', 'count_lowercased',\n","       'count_punctuation', 'count_words_title', 'count_uppercased_title','count_lowercased_title', 'count_punctuation_title',\n","       'LABEL', 'number_of_authors', 'polarity',\n","       'pros_title_length_y','Average_betweeness','Average_closeness',\n","        'Average_page_rank','Average_degree_centrality','Average_eigen_vector']]                          # 'count_breaking','count_do_not','Average_page_rank','Average_betweeness','Average_page_rank','Average_degree_centrality','Average_eigen_vector', 'number_of_authors','polarity',\n","y =  classification_train.LABEL\n","X =  classification_train.drop('LABEL',axis=1)\n","scaler=StandardScaler()\n","scaled_X = scaler.fit_transform(X)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Z9MHMTbgp0u5"},"source":["def classify(X,y,classifier):   \n","    kf = StratifiedKFold(n_splits=10,shuffle=True,random_state=100)\n","    acc_score=[]\n","    prec_score =[]\n","    f_score =[]\n","    reca_score =[]\n","    i=1\n","    for train_index,test_index in kf.split(X,y):\n","        #print('{} of KFold {}'.format(i,kf.n_splits))\n","        xtr,xvl = X[train_index],X[test_index]\n","        ytr,yvl = y[train_index],y[test_index]\n","\n","        #model\n","        clfr = classifier\n","        clfr.fit(xtr,ytr)\n","        pred2= clfr.predict(xvl) \n","        Accuracy= accuracy_score(yvl, pred2)\n","        #confusion matrix',confusion_matrix(yvl, pred))\n","        recall = metrics.recall_score(yvl, pred2)\n","        precision = metrics.precision_score(yvl, pred2)\n","        fscore=metrics.f1_score(yvl, pred2)\n","        print(metrics.confusion_matrix(yvl,pred2))\n","        \n","        #print('confusion matrix',confusion_matrix(yvl, pred2))\n","        #print('precision_recall_fscore_support',precision_recall_fscore_support(yvl, pred2))\n","        acc_score.append(Accuracy)\n","        prec_score.append(precision)\n","        reca_score.append(recall)\n","        f_score.append(fscore)\n","        i+=1\n","    e = (sum(acc_score)/len(acc_score))\n","    f= (sum(prec_score)/len(prec_score))\n","    g=(sum(reca_score)/len(reca_score))\n","    h=(sum(f_score)/len(f_score))\n","    print(classifier,':')\n","    print('\\033[1m'+'Average of all Precision :' +'\\033[0m',f)\n","    print('\\033[1m'+'Average of all Accuracy :' +'\\033[0m',e)\n","    print('\\033[1m'+'Average of all Recall :' +'\\033[0m',g)\n","    print('\\033[1m'+'Average of all F1-score :' +'\\033[0m',h)\n","    return e,f,g,h\n","    \n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"LsKktkl4p0ww","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1606961680741,"user_tz":420,"elapsed":9507,"user":{"displayName":"Abishai Joy","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgdYPXDTI0VUBBqyosw2ywTi86EJFcwbYxBsPKI=s64","userId":"00146332931227246855"}},"outputId":"da48ed0a-bd35-46d3-b02a-3dd35dcb8e11"},"source":["def call_classify(X,y):    #our dataset is not imbalanced\n","    accuracy=[]\n","    avg_precision=[]\n","    recall=[]\n","    f_score=[]\n","    classifiers = [RandomForestClassifier(n_estimators=200,n_jobs=-1,random_state=100),\n","                   LogisticRegression(random_state=100),SVC(kernel='linear',random_state=100,probability=True),\n","                   ExtraTreesClassifier(n_estimators=100, random_state=100),GaussianNB(),\n","                   xgb.XGBClassifier(objective=\"binary:logistic\", random_state=100)]\n","    for classifier in (classifiers):\n","            e,f,g,h = classify(X,y,classifier)\n","            accuracy.append(e*100)\n","            avg_precision.append(f*100)\n","            recall.append(g*100)\n","            f_score.append(h*100)\n","    return accuracy,f_score,avg_precision,recall\n","classif = ['Random Forest','Logistic_regression','SVM','Extratrees classifier','GaussianNB','XGBoost']        \n","\n","e1,f1,g1,h1=call_classify(scaled_X,y) \n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[[18  4]\n"," [ 4 17]]\n","[[20  1]\n"," [ 3 19]]\n","[[16  5]\n"," [ 4 17]]\n","[[17  4]\n"," [ 3 18]]\n","[[18  3]\n"," [ 4 17]]\n","[[20  1]\n"," [ 4 17]]\n","[[19  2]\n"," [ 1 20]]\n","[[18  3]\n"," [ 5 16]]\n","[[14  7]\n"," [ 3 18]]\n","[[16  5]\n"," [ 3 18]]\n","RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,\n","                       criterion='gini', max_depth=None, max_features='auto',\n","                       max_leaf_nodes=None, max_samples=None,\n","                       min_impurity_decrease=0.0, min_impurity_split=None,\n","                       min_samples_leaf=1, min_samples_split=2,\n","                       min_weight_fraction_leaf=0.0, n_estimators=200,\n","                       n_jobs=-1, oob_score=False, random_state=100, verbose=0,\n","                       warm_start=False) :\n","\u001b[1mAverage of all Precision :\u001b[0m 0.8398682212778322\n","\u001b[1mAverage of all Accuracy :\u001b[0m 0.8363787375415284\n","\u001b[1mAverage of all Recall :\u001b[0m 0.8387445887445887\n","\u001b[1mAverage of all F1-score :\u001b[0m 0.8374278927481225\n","[[16  6]\n"," [ 6 15]]\n","[[19  2]\n"," [ 6 16]]\n","[[15  6]\n"," [ 5 16]]\n","[[16  5]\n"," [ 6 15]]\n","[[18  3]\n"," [ 2 19]]\n","[[19  2]\n"," [ 0 21]]\n","[[16  5]\n"," [ 5 16]]\n","[[17  4]\n"," [ 2 19]]\n","[[14  7]\n"," [ 5 16]]\n","[[15  6]\n"," [ 3 18]]\n","LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,\n","                   intercept_scaling=1, l1_ratio=None, max_iter=100,\n","                   multi_class='auto', n_jobs=None, penalty='l2',\n","                   random_state=100, solver='lbfgs', tol=0.0001, verbose=0,\n","                   warm_start=False) :\n","\u001b[1mAverage of all Precision :\u001b[0m 0.7890771064684108\n","\u001b[1mAverage of all Accuracy :\u001b[0m 0.796345514950166\n","\u001b[1mAverage of all Recall :\u001b[0m 0.8108225108225108\n","\u001b[1mAverage of all F1-score :\u001b[0m 0.7981259315462378\n","[[16  6]\n"," [ 7 14]]\n","[[19  2]\n"," [ 6 16]]\n","[[16  5]\n"," [ 4 17]]\n","[[15  6]\n"," [ 6 15]]\n","[[17  4]\n"," [ 2 19]]\n","[[17  4]\n"," [ 0 21]]\n","[[17  4]\n"," [ 6 15]]\n","[[17  4]\n"," [ 2 19]]\n","[[14  7]\n"," [ 6 15]]\n","[[14  7]\n"," [ 1 20]]\n","SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,\n","    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',\n","    max_iter=-1, probability=True, random_state=100, shrinking=True, tol=0.001,\n","    verbose=False) :\n","\u001b[1mAverage of all Precision :\u001b[0m 0.7780108395714803\n","\u001b[1mAverage of all Accuracy :\u001b[0m 0.7892580287929125\n","\u001b[1mAverage of all Recall :\u001b[0m 0.810822510822511\n","\u001b[1mAverage of all F1-score :\u001b[0m 0.7909234175444193\n","[[20  2]\n"," [ 3 18]]\n","[[19  2]\n"," [ 4 18]]\n","[[20  1]\n"," [ 3 18]]\n","[[17  4]\n"," [ 4 17]]\n","[[16  5]\n"," [ 3 18]]\n","[[20  1]\n"," [ 2 19]]\n","[[19  2]\n"," [ 2 19]]\n","[[17  4]\n"," [ 3 18]]\n","[[17  4]\n"," [ 4 17]]\n","[[18  3]\n"," [ 4 17]]\n","ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,\n","                     criterion='gini', max_depth=None, max_features='auto',\n","                     max_leaf_nodes=None, max_samples=None,\n","                     min_impurity_decrease=0.0, min_impurity_split=None,\n","                     min_samples_leaf=1, min_samples_split=2,\n","                     min_weight_fraction_leaf=0.0, n_estimators=100,\n","                     n_jobs=None, oob_score=False, random_state=100, verbose=0,\n","                     warm_start=False) :\n","\u001b[1mAverage of all Precision :\u001b[0m 0.8671968458696148\n","\u001b[1mAverage of all Accuracy :\u001b[0m 0.8577519379844961\n","\u001b[1mAverage of all Recall :\u001b[0m 0.8484848484848484\n","\u001b[1mAverage of all F1-score :\u001b[0m 0.8570489842923195\n","[[13  9]\n"," [ 6 15]]\n","[[15  6]\n"," [ 6 16]]\n","[[13  8]\n"," [ 3 18]]\n","[[14  7]\n"," [ 6 15]]\n","[[17  4]\n"," [ 4 17]]\n","[[13  8]\n"," [ 5 16]]\n","[[15  6]\n"," [ 6 15]]\n","[[16  5]\n"," [ 6 15]]\n","[[ 7 14]\n"," [ 6 15]]\n","[[16  5]\n"," [ 4 17]]\n","GaussianNB(priors=None, var_smoothing=1e-09) :\n","\u001b[1mAverage of all Precision :\u001b[0m 0.695684344391241\n","\u001b[1mAverage of all Accuracy :\u001b[0m 0.7062569213732004\n","\u001b[1mAverage of all Recall :\u001b[0m 0.7536796536796537\n","\u001b[1mAverage of all F1-score :\u001b[0m 0.7214896885764966\n","[[16  6]\n"," [ 4 17]]\n","[[19  2]\n"," [ 3 19]]\n","[[17  4]\n"," [ 5 16]]\n","[[16  5]\n"," [ 3 18]]\n","[[18  3]\n"," [ 5 16]]\n","[[18  3]\n"," [ 2 19]]\n","[[17  4]\n"," [ 2 19]]\n","[[18  3]\n"," [ 4 17]]\n","[[14  7]\n"," [ 5 16]]\n","[[15  6]\n"," [ 2 19]]\n","XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,\n","              colsample_bynode=1, colsample_bytree=1, gamma=0,\n","              learning_rate=0.1, max_delta_step=0, max_depth=3,\n","              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,\n","              nthread=None, objective='binary:logistic', random_state=100,\n","              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,\n","              silent=None, subsample=1, verbosity=1) :\n","\u001b[1mAverage of all Precision :\u001b[0m 0.8063981792425727\n","\u001b[1mAverage of all Accuracy :\u001b[0m 0.8151162790697674\n","\u001b[1mAverage of all Recall :\u001b[0m 0.8339826839826839\n","\u001b[1mAverage of all F1-score :\u001b[0m 0.8185103096366012\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Nensx7tzp00s","colab":{"base_uri":"https://localhost:8080/","height":233},"executionInfo":{"status":"ok","timestamp":1606961680744,"user_tz":420,"elapsed":4095,"user":{"displayName":"Abishai Joy","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgdYPXDTI0VUBBqyosw2ywTi86EJFcwbYxBsPKI=s64","userId":"00146332931227246855"}},"outputId":"5c8dade5-daba-42ef-891c-e3b14cb650f2"},"source":["result = pd.DataFrame(\n","    {'Classifier': classif,\n","     'Accuracy': e1,\n","     'Precision': f1,\n","     'Recall': g1,\n","     'F1-score': h1,\n","    })\n","\n","result"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Classifier</th>\n","      <th>Accuracy</th>\n","      <th>Precision</th>\n","      <th>Recall</th>\n","      <th>F1-score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Random Forest</td>\n","      <td>83.637874</td>\n","      <td>83.742789</td>\n","      <td>83.986822</td>\n","      <td>83.874459</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Logistic_regression</td>\n","      <td>79.634551</td>\n","      <td>79.812593</td>\n","      <td>78.907711</td>\n","      <td>81.082251</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>SVM</td>\n","      <td>78.925803</td>\n","      <td>79.092342</td>\n","      <td>77.801084</td>\n","      <td>81.082251</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Extratrees classifier</td>\n","      <td>85.775194</td>\n","      <td>85.704898</td>\n","      <td>86.719685</td>\n","      <td>84.848485</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>GaussianNB</td>\n","      <td>70.625692</td>\n","      <td>72.148969</td>\n","      <td>69.568434</td>\n","      <td>75.367965</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>XGBoost</td>\n","      <td>81.511628</td>\n","      <td>81.851031</td>\n","      <td>80.639818</td>\n","      <td>83.398268</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["              Classifier   Accuracy  Precision     Recall   F1-score\n","0          Random Forest  83.637874  83.742789  83.986822  83.874459\n","1    Logistic_regression  79.634551  79.812593  78.907711  81.082251\n","2                    SVM  78.925803  79.092342  77.801084  81.082251\n","3  Extratrees classifier  85.775194  85.704898  86.719685  84.848485\n","4             GaussianNB  70.625692  72.148969  69.568434  75.367965\n","5                XGBoost  81.511628  81.851031  80.639818  83.398268"]},"metadata":{"tags":[]},"execution_count":160}]},{"cell_type":"markdown","metadata":{"id":"qReCH1sqokUZ"},"source":["With the LDA features, Extra trees (85.77) and Random forest(83.63) outperformed among the classifiers."]},{"cell_type":"markdown","metadata":{"id":"2ozoMvDWYsbW"},"source":["Feature Importance"]},{"cell_type":"code","metadata":{"id":"_qIwuIkkp08A"},"source":["# Building the model \n","extra_tree_forest = ExtraTreesClassifier( criterion ='entropy', max_features = 2,random_state=100) \n","  \n","# Training the model \n","extra_tree_forest.fit(X, y) \n","  \n","# Computing the importance of each feature \n","feature_importance = extra_tree_forest.feature_importances_ \n","  \n","# Normalizing the individual importances \n","feature_importance_normalized = np.std([tree.feature_importances_ for tree in \n","                                        extra_tree_forest.estimators_], \n","                                        axis = 0)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"p_iBHNX-mBQG","executionInfo":{"status":"ok","timestamp":1606961725742,"user_tz":420,"elapsed":332,"user":{"displayName":"Abishai Joy","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgdYPXDTI0VUBBqyosw2ywTi86EJFcwbYxBsPKI=s64","userId":"00146332931227246855"}},"outputId":"e944285d-82a3-4dec-afbe-23af3a37be6b"},"source":["len(X.columns)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["31"]},"metadata":{"tags":[]},"execution_count":163}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":200},"id":"5PoZpRDxmDvf","executionInfo":{"status":"ok","timestamp":1606961727552,"user_tz":420,"elapsed":863,"user":{"displayName":"Abishai Joy","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgdYPXDTI0VUBBqyosw2ywTi86EJFcwbYxBsPKI=s64","userId":"00146332931227246855"}},"outputId":"ce85c340-b95b-41f6-838a-59af630a19da"},"source":["#It gives relative importance\n","plt.rcParams.update({'font.size': 22})\n","plt.figure(figsize=(70,10))\n","plt.bar(X.columns[0:10], feature_importance_normalized[0:10]) \n","plt.xlabel('Feature Labels') \n","plt.ylabel('Feature Importances') \n","plt.title('Comparison of different Feature Importances') \n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 5040x720 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":201},"id":"3HNvczUAm44D","executionInfo":{"status":"ok","timestamp":1606961729505,"user_tz":420,"elapsed":1013,"user":{"displayName":"Abishai Joy","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgdYPXDTI0VUBBqyosw2ywTi86EJFcwbYxBsPKI=s64","userId":"00146332931227246855"}},"outputId":"f4619a61-076b-4db5-e56f-d094198c4679"},"source":["plt.rcParams.update({'font.size': 22})\n","plt.figure(figsize=(70,10))\n","plt.bar(X.columns[10:25], feature_importance_normalized[10:25]) \n","plt.xlabel('Feature Labels') \n","plt.ylabel('Feature Importances') \n","plt.title('Comparison of different Feature Importances') \n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 5040x720 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":201},"id":"as5MybUmnruS","executionInfo":{"status":"ok","timestamp":1606961735155,"user_tz":420,"elapsed":1013,"user":{"displayName":"Abishai Joy","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgdYPXDTI0VUBBqyosw2ywTi86EJFcwbYxBsPKI=s64","userId":"00146332931227246855"}},"outputId":"a9113612-fdb9-4708-9a44-23e9b1579a23"},"source":["plt.rcParams.update({'font.size': 22})\n","plt.figure(figsize=(70,10))\n","plt.bar(X.columns[25:35], feature_importance_normalized[25:35]) \n","plt.xlabel('Feature Labels') \n","plt.ylabel('Feature Importances') \n","plt.title('Comparison of different Feature Importances') \n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 5040x720 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"ozo8SKUB_SBp"},"source":[""],"execution_count":null,"outputs":[]}]}